version: '3.7'

services:
  app-node:
    container_name: messenger_node
    build:
      context: ../socket-app
      args:
        UID: ${UID}
        GID: ${GID}
        NODE_USER_NAME: ${NODE_USER_NAME}
      dockerfile: ../infrastructure/node/Dockerfile
    environment:
      SOCKET_PORT: ${SOCKET_PORT}
      NODE_ENV: ${NODE_ENV}
      SSL_KEY: ${SSL_KEY}
      SSL_CERT: ${SSL_CERT}
    volumes:
      - /var/www/node_modules
      - ../socket-app:/var/www
    networks:
      - app-network

  app-fpm:
    container_name: messenger_fpm
    build:
      context: php
      args:
        UID: ${UID}
        GID: ${GID}
        FPM_USER_NAME: ${FPM_USER_NAME}
        XDEBUG: ${XDEBUG}
        JWT_KEY_PASS: ${JWT_KEY_PASS}
        JWT_KEY_PATH: ${JWT_KEY_PATH}
    env_file:
      - .env
    volumes:
      - ../web-app:/var/www
    depends_on:
      - app-db
    networks:
      - app-network

  app-websocket:
    build:
      context: ../websocket-app
      dockerfile: ../infrastructure/golang/Dockerfile
    networks:
      - app-network

  app-web-server:
    build:
      context: nginx
      args:
        SERVER_NAME: ${SERVER_NAME}
    volumes:
      - ../web-app/assets:/var/www/assets
    depends_on:
      - app-fpm
    networks:
      - app-network

  app-db:
    image: postgres:${APP_DB_VERSION}-alpine
    environment:
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
    volumes:
      - app-db-volume:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  app-db-volume:
  app-node-modules:

networks:
  app-network:
    driver: bridge